<%- include ("partials/header") -%>
	<style>
		.gm-style-iw{
			padding:2px !important;
			touch-action: none; /* Disables pinch-zoom and scrolling */
  			overflow: auto;
		}

		.gm-style .gm-style-iw-d{
			padding:0px !important;
			margin-bottom:-10px;
			margin-right:-12px;
		}

		.gm-ui-hover-effect{
			display:none !important; 
		}

		.gm-style-iw-chr{
			display:none !important;
		}
	</style>
	<div class="pageWidth izvestajLokacije">
		<script>
			function millisecondsToTime(ms) {
				const hours = Math.floor(ms / (1000 * 60 * 60));
				const minutes = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));

				if (hours === 0) {
				    return `${minutes} min`;
				} else if (hours === 1) {
				    return `1 sat i ${minutes} min`;
				} else {
				    return `${hours} sati i ${minutes} min`;
				}
			}
			var magacin = {lat:44.813906,lng:20.443903};
			var nalozi = <%-JSON.stringify(nalozi)%>;
			//console.log(nalozi);
			var stops = <%-JSON.stringify(stops)%>;
			//console.log(stops);
			var vozilo = <%=vozilo%>;
			var date = "<%=date%>";
			console.log(date)

			var pauza = 5;//min
			pauza = pauza * 60000;

			for(var i=0;i<stops.length;i++){
				var stopStart = new Date(stops[i].gmtStopStart);
				var stopEnd = new Date(stops[i].gmtStopEnd);
				var stopTime = stopEnd.getTime() - stopStart.getTime();
				stops[i].stopstartdatetime = stopStart.getTime();
				stops[i].stopstopdatetime = stopEnd.getTime();
				
				if( stopTime > pauza){
					stops[i].tip = "Pauza"
				}else{
					stops[i].tip = "Lokacija"
				}
				stops[i].trajanje = stopTime;
				var position = {lat:0,lng:0}
				if(stops[i].endLatitude>0){
					position.lat = stops[i].endLatitude;
					position.lng = stops[i].endLongitude;
				}else{
					position.lat = stops[i].startLatitude;
					position.lng = stops[i].startLongitude;
				}
				stops[i].pozicija = position;
				if(stopTime>10*60*60*1000){
					stops.splice(i,1);
					i--;
				}
			}
		</script>
		<div id="map"></div>
		<div class="navInfo">
			<div id="nav-info"></div>
		</div>
		<script>
			for(var i=0;i<stops.length;i++){
				if(stops[i].tip=="Pauza"){
					var item2 = document.createElement("DIV");
					item2.setAttribute("class","item");
					item2.setAttribute("data-lat",stops[i].pozicija.lat);
					item2.setAttribute("data-lng",stops[i].pozicija.lng);
					item2.setAttribute("onclick","focusNav(this)");
					item2.innerHTML = getTimestamp(new Date(stops[i].gmtStopStart))+" - "+getTimestamp(new Date(stops[i].gmtStopEnd))+"<br><i style=\"font-weight:200\">"+millisecondsToTime(stops[i].trajanje)+"</i>";
					document.getElementById("nav-info").appendChild(item2);
				}
				
			}
		</script>
		<script>
			var map;
			var myLatLng;
			var marker;
			var markers;
			var originalCenter;

			function initMap() {
				myLatLng = {lat: 44.800003, lng: 20.45006};//51.896468, 4.419172
				map = new google.maps.Map(document.getElementById('map'), {
					center: myLatLng,
					zoom: 13,
					gestureHandling: "cooperative",
					styles: [{"elementType":"geometry","stylers":[{"color":"#f5f5f5"}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"elementType":"labels.text.fill","stylers":[{"color":"#616161"}]},{"elementType":"labels.text.stroke","stylers":[{"color":"#f5f5f5"}]},{"featureType":"administrative.land_parcel","elementType":"labels.text.fill","stylers":[{"color":"#bdbdbd"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#eeeeee"}]},{"featureType":"poi","elementType":"labels.text.fill","stylers":[{"color":"#757575"}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#e5e5e5"}]},{"featureType":"poi.park","elementType":"labels.text.fill","stylers":[{"color":"#9e9e9e"}]},{"featureType":"road","elementType":"geometry","stylers":[{"color":"#ffffff"}]},{"featureType":"road.arterial","elementType":"labels.text.fill","stylers":[{"color":"#757575"}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"color":"#dadada"}]},{"featureType":"road.highway","elementType":"labels.text.fill","stylers":[{"color":"#616161"}]},{"featureType":"road.local","elementType":"labels.text.fill","stylers":[{"color":"#9e9e9e"}]},{"featureType":"transit.line","elementType":"geometry","stylers":[{"color":"#e5e5e5"}]},{"featureType":"transit.station","elementType":"geometry","stylers":[{"color":"#eeeeee"}]},{"featureType":"water","elementType":"geometry","stylers":[{"color":"#c9c9c9"}]},{"featureType":"water","elementType":"labels.text.fill","stylers":[{"color":"#9e9e9e"}]}]
				});

				var radius = 300;
				for(var i=0;i<nalozi.length;i++){
					marker = new google.maps.Marker({
				         position: {lat: nalozi[i].coordinates.lat, lng: nalozi[i].coordinates.lng},
				         map: map,
				         icon:{
				         	url: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png"
				         }
				    });
				    var infowindow = new google.maps.InfoWindow({
						content: "Планирано: "+nalozi[i].vremeDolaska+"<br>"+"<a href=\"/nalog/"+nalozi[i].nalog+"\" onclick=\"this.style.backgroundColor=\'rgb(31,52,101)\';this.style.color=\'rgb(255,255,255)\'\" style=\"color:rgb(31,52,101)\" target=\"_blank\">" + nalozi[i].nalog + "</a><br>"+nalozi[i].adresa
					});
					infowindow.open(map,marker);


					google.maps.event.addListener(infowindow, "domready", function () {
				        const infoWindowElement = document.querySelector(".gm-style");
				        if (infoWindowElement) {
				            infoWindowElement.addEventListener("wheel", function (event) {
				                event.preventDefault();
				                event.stopPropagation();
				            }, { passive: false });
				        }
				    });

				    markers.push(marker);
				    var nalogCircle = new google.maps.Circle({
				      strokeColor: "#6891fe",
				      strokeOpacity: 0.8,
				      strokeWeight: 2,
				      fillColor: "#6891fe",
				      fillOpacity: 0.35,
				      map,
				      center: {lat: nalozi[i].coordinates.lat, lng: nalozi[i].coordinates.lng},
				      radius: radius,
				    });
				}

				for(var i=0;i<stops.length;i++){
					var position = {lat:0,lng:0}
					if(stops[i].endLatitude>0){
						position.lat = stops[i].endLatitude;
						position.lng = stops[i].endLongitude;
					}else{
						position.lat = stops[i].startLatitude;
						position.lng = stops[i].startLongitude;
					}


					var isInsideAnyCircle = 0;
					var brojNaloga = 0;
					for(var j=0;j<nalozi.length;j++){
						if(haversine_distance(position,{lat:nalozi[j].coordinates.lat,lng:nalozi[j].coordinates.lng})<0.5){
							isInsideAnyCircle = 1;
							brojNaloga = nalozi[j].nalog;
						}
					}

					if(stops[i].tip == "Pauza"){
						marker = new google.maps.Marker({
					         position: position,
					         map: map,
					         icon:{
					         	url: isInsideAnyCircle==1 ? "https://maps.google.com/mapfiles/ms/icons/green-dot.png" : "https://maps.google.com/mapfiles/ms/icons/red-dot.png"
					         }
					    });
					    var infowindow = new google.maps.InfoWindow({
							content: getTimestamp(new Date(stops[i].gmtStopStart))+" - "+getTimestamp(new Date(stops[i].gmtStopEnd))+"<br>"+millisecondsToTime(stops[i].trajanje)//+brojNaloga
						});
						infowindow.open(map,marker);
					    markers.push(marker);
					}else if(stops[i].tip == "Lokacija"){
						marker = new google.maps.Marker({
					         position: position,
					         map: map,
					         icon:{
					         	url: "https://poslovi-grada-2024.fra1.digitaloceanspaces.com/images/green-nav2.png"
					         }
					    });
					    var infowindow = new google.maps.InfoWindow({
							content: millisecondsToTime(stops[i].trajanje)
						});
					    markers.push(marker);
					}else{
						console.log("Greska 249")
					}
					
				}

				if(istiDatum(new Date(),new Date(date))){
					marker = new google.maps.Marker({
				         position: myLatLng,
				         map: map,
				         majstor: 1,
				         icon:{
				         	url: "https://maps.google.com/mapfiles/ms/icons/truck.png"
				         }
				    });
				    var infowindow = new google.maps.InfoWindow({
						content: "Majstor"
					});
					infowindow.open(map,marker);
				    markers.push(marker);
				}
				


			}

			markers = [];
			
			if(istiDatum(new Date(),new Date(date))){
				socket.on("lokacijaMajstoraOdgovor",function(response){
					for(var i=0;i<response.length;i++){
						if(response[i].vehicleId==vozilo){
							for(var j=0;j<markers.length;j++){
								if(markers[j].majstor){
									markers[j].setPosition({lat:response[i].gpsLat,lng:response[i].gpsLon});
									console.log("Position updated")
								}
							}
						}
					}
				})	
			}
			
			
		</script>
		<script src="https://maps.googleapis.com/maps/api/js?v=3&key=<%=googlegeocoding%>&amp;callback=initMap" async="" defer=""></script>
		<script>
			function focusNav(elem){
				//console.log(elem.dataset.lat)
				//console.log(elem.dataset.lng)
				map.setCenter({lat:parseFloat(elem.dataset.lat), lng:parseFloat(elem.dataset.lng)});
				map.setZoom(18)
			}
		</script>
	</div>
<%- include ("partials/footer") -%>
