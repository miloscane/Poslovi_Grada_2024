<%- include ("partials/header") -%>
	<style>
		.gm-style-iw{
			padding:2px !important;
		}

		.gm-style .gm-style-iw-d{
			padding:0px !important;
			margin-bottom:-10px;
			margin-right:-12px;
		}

		.gm-ui-hover-effect{
			display:none !important; 
		}
	</style>
	<div class="pageWidth izvestajLokacije">
		<script>
			var magacin = {lat:44.813906,lng:20.443903};
			var nalozi = <%-JSON.stringify(nalozi)%>;
			nalozi.push({
				nalog: "1111111",
				datum:{timestamp: "/"},
				coordinates:magacin
			});
			var stops = <%-JSON.stringify(stops)%>;
			var pauza = 5;//min
			pauza = pauza * 60000
			//console.log(stops);
			for(var i=0;i<stops.length;i++){
				var stopStart = new Date(stops[i].gmtStopStart);
				var stopEnd = new Date(stops[i].gmtStopEnd);
				var stopTime = stopEnd.getTime() - stopStart.getTime();
				stops[i].stopstartdatetime = stopStart.getTime();
				stops[i].stopstopdatetime = stopEnd.getTime();
				if( stopTime > pauza){
					stops[i].tip = "Pauza"
				}else{
					stops[i].tip = "Lokacija"
				}
				stops[i].trajanje = stopTime;
				var position = {lat:0,lng:0}
				if(stops[i].endLatitude>0){
					position.lat = stops[i].endLatitude;
					position.lng = stops[i].endLongitude;
				}else{
					position.lat = stops[i].startLatitude;
					position.lng = stops[i].startLongitude;
				}
				stops[i].pozicija = position;
			}
		</script>
		<div id="map"></div>
		<div class="navInfo">
			<div id="nav-info"></div>
		</div>
		<script>
			for(var i=0;i<stops.length;i++){
				if(stops[i].tip=="Pauza"){
					var item2 = document.createElement("DIV");
					item2.setAttribute("class","item");
					item2.setAttribute("data-lat",stops[i].pozicija.lat);
					item2.setAttribute("data-lng",stops[i].pozicija.lng);
					item2.setAttribute("onclick","focusNav(this)");
					item2.innerHTML = getTimestamp(new Date(stops[i].gmtStopStart))+" - "+getTimestamp(new Date(stops[i].gmtStopEnd))
					document.getElementById("nav-info").appendChild(item2);
				}
				
			}
		</script>
		<script>
			var map;
			var myLatLng;
			var marker;
			var markers;
			var originalCenter;

			function initMap() {
				myLatLng = {lat: 44.800003, lng: 20.45006};//51.896468, 4.419172
				map = new google.maps.Map(document.getElementById('map'), {
					center: myLatLng,
					zoom: 13,
					styles: [{"elementType":"geometry","stylers":[{"color":"#f5f5f5"}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"elementType":"labels.text.fill","stylers":[{"color":"#616161"}]},{"elementType":"labels.text.stroke","stylers":[{"color":"#f5f5f5"}]},{"featureType":"administrative.land_parcel","elementType":"labels.text.fill","stylers":[{"color":"#bdbdbd"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#eeeeee"}]},{"featureType":"poi","elementType":"labels.text.fill","stylers":[{"color":"#757575"}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#e5e5e5"}]},{"featureType":"poi.park","elementType":"labels.text.fill","stylers":[{"color":"#9e9e9e"}]},{"featureType":"road","elementType":"geometry","stylers":[{"color":"#ffffff"}]},{"featureType":"road.arterial","elementType":"labels.text.fill","stylers":[{"color":"#757575"}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"color":"#dadada"}]},{"featureType":"road.highway","elementType":"labels.text.fill","stylers":[{"color":"#616161"}]},{"featureType":"road.local","elementType":"labels.text.fill","stylers":[{"color":"#9e9e9e"}]},{"featureType":"transit.line","elementType":"geometry","stylers":[{"color":"#e5e5e5"}]},{"featureType":"transit.station","elementType":"geometry","stylers":[{"color":"#eeeeee"}]},{"featureType":"water","elementType":"geometry","stylers":[{"color":"#c9c9c9"}]},{"featureType":"water","elementType":"labels.text.fill","stylers":[{"color":"#9e9e9e"}]}]
				});
				
				
				/*var contentString = '<div style="text-align:center;"><div style="color:rgba(37,78,118,1); font-weight:bold; margin-top:10px; font-size:14px;">Mobatec<br>Headquarters</div></div>';

				var infowindow = new google.maps.InfoWindow({
					content: contentString
				});
				infowindow.open(map,marker);*/

				/*function arePointsNear(checkPoint,center){
					var ky = 40000/360;
					var kx = Math.cos(Math.PI*center.lat/180)*ky;
					var dx = Math.abs(center.lng-checkPoint.lng)*kx;
					var dy = Math.abs(center.lat-checkPoint.lat);
					return Math.sqrt(dx*dx + dy*dy) <= radius/1000;
				}*/

				var radius = 300;
				for(var i=0;i<nalozi.length;i++){
					marker = new google.maps.Marker({
				         position: {lat: nalozi[i].coordinates.lat, lng: nalozi[i].coordinates.lng},
				         map: map,
				         icon:{
				         	url: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png"
				         }
				    });
				    var infowindow = new google.maps.InfoWindow({
						content: nalozi[i].datum.timestamp+"<br>"+"<a href=\"/nalog/"+nalozi[i].nalog+"\" style=\"color:rgb(31,52,101)\" target=\"_blank\">" + nalozi[i].nalog + "</a>"
					});
					infowindow.open(map,marker);
				    markers.push(marker);
				    var nalogCircle = new google.maps.Circle({
				      strokeColor: "#6891fe",
				      strokeOpacity: 0.8,
				      strokeWeight: 2,
				      fillColor: "#6891fe",
				      fillOpacity: 0.35,
				      map,
				      center: {lat: nalozi[i].coordinates.lat, lng: nalozi[i].coordinates.lng},
				      radius: radius,
				    });
				}

				for(var i=0;i<stops.length;i++){
					var position = {lat:0,lng:0}
					if(stops[i].endLatitude>0){
						position.lat = stops[i].endLatitude;
						position.lng = stops[i].endLongitude;
					}else{
						position.lat = stops[i].startLatitude;
						position.lng = stops[i].startLongitude;
					}


					var isInsideAnyCircle = 0;
					var brojNaloga = 0;
					for(var j=0;j<nalozi.length;j++){
						
						/*var distanceFromCenter = Math.sqrt((position.lat-nalozi[j].coordinates.lat)**2+(position.lng-nalozi[j].coordinates.lng)**2);
						console.log("position.lat: "+position.lat);
						console.log("position.lng: "+position.lng);
						console.log("nalozi[j].coordinates.lng: "+nalozi[j].coordinates.lng);
						console.log("nalozi[j].coordinates.lat: "+nalozi[j].coordinates.lat);
						console.log(distanceFromCenter);
						console.log("-------------------------------------")
						if(distanceFromCenter<radius/637100){
							isInsideAnyCircle = true;
							break;
						}*/
						if(haversine_distance(position,{lat:nalozi[j].coordinates.lat,lng:nalozi[j].coordinates.lng})<0.5){
							isInsideAnyCircle = 1;
							brojNaloga = nalozi[j].nalog;
						}
						//console.log(haversine_distance(position,{lat:nalozi[j].coordinates.lat,lng:nalozi[j].coordinates.lng}));
					}

					if(stops[i].tip == "Pauza"){
						marker = new google.maps.Marker({
					         position: position,
					         map: map,
					         icon:{
					         	url: isInsideAnyCircle==1 ? "https://maps.google.com/mapfiles/ms/icons/blue-dot.png" : "https://maps.google.com/mapfiles/ms/icons/red-dot.png"
					         }
					    });
					    var infowindow = new google.maps.InfoWindow({
							content: getTimestamp(new Date(stops[i].gmtStopStart))+" - "+getTimestamp(new Date(stops[i].gmtStopEnd))+"<br>"+ eval(stops[i].trajanje*1.66667e-5).toFixed(0) + " min<br>"//+brojNaloga
						});
						infowindow.open(map,marker);
					    markers.push(marker);
					}else if(stops[i].tip == "Lokacija"){
						marker = new google.maps.Marker({
					         position: position,
					         map: map,
					         icon:{
					         	url: "https://poslovi-grada-2024.fra1.digitaloceanspaces.com/images/green-nav2.png"
					         }
					    });
					    var infowindow = new google.maps.InfoWindow({
							content: eval(stops[i].trajanje*1.66667e-5).toFixed(0) + " min"
						});
						//infowindow.open(map,marker);
					    markers.push(marker);
					}else{
						console.log("Greska 249")
					}
					
				}

			}

			markers = [];
			
			
		</script>
		<script src="https://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyAsUyoMs0Ba_6bPbtD5A5_1yOJXjjMYsMQ&amp;callback=initMap" async="" defer=""></script>
		<script>
			function focusNav(elem){
				//console.log(elem.dataset.lat)
				//console.log(elem.dataset.lng)
				map.setCenter({lat:parseFloat(elem.dataset.lat), lng:parseFloat(elem.dataset.lng)});
				map.setZoom(18)
			}
		</script>
	</div>
<%- include ("partials/footer") -%>
